<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.UserMapper">
  <resultMap id="BaseResultMap" type="pojo.User">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="username" jdbcType="VARCHAR" property="username"/>
    <result column="birthday" jdbcType="DATE" property="birthday"/>
    <result column="sex" jdbcType="CHAR" property="sex"/>
    <result column="address" jdbcType="VARCHAR" property="address"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, username, birthday, sex, address
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByIdList" resultMap="BaseResultMap">
    select * from user where id in (
    <foreach collection="list" item="item" separator=",">
      #{item}
    </foreach>
    )
  </select>
  <select id="selectByIdName" resultMap="BaseResultMap">
    select *
    from user
    where username like concat('%', #{name}, '%')
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select *
    from user
  </select>
  <select id="getUserByOrder" resultMap="BaseResultMap">
    select *
    from user
    where id = (select user_id from mmall_order_item where order_no = #{orderId})
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete
    from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="pojo.User">
    insert into user (id, username, birthday,
                      sex, address)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE},
            #{sex,jdbcType=CHAR}, #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
        birthday = #{birthday,jdbcType=DATE},
        sex      = #{sex,jdbcType=CHAR},
        address  = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>